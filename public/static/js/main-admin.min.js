"use strict";

var $ = window.jQuery;
$(document).ready(function () {
    //$("pre").addClass("brush: js");
    //SyntaxHighlighter.all();
    //$("select.buscador").select2();
    /*$(".switch").bootstrapSwitch({
        onText:'SI',
        offText:'NO',
        handleWidth:40
    });
    $("[name='state']").bootstrapSwitch();
    $("[name='watermark']").bootstrapSwitch({‚àè
        onText:'SI',
        offText:'NO',
        labelText:'Marca de agua',
        labelWidth:100
    });
    $('input[type="date"]').datepicker({
        format: "yyyy-mm-dd",
        clearBtn: true,
        language: "es",
        autoclose: true,
        todayHighlight: true
    });*/
});
var App = {
    initialize: function initialize() {
        $("[data-autoclose]").delay(4000).slideUp(200, function () {
            $(this).alert('close');
        });
        $("#inputBrand").fileinput({
            theme: 'fa',
            allowedFileExtensions: ["jpg", "jpeg", "png", "gif", "svg"],
            previewSettings: { image: { width: "100%", height: "auto" } },
            showUpload: false,
            language: 'es',
            maxFileSize: 1000,
            uploadAsync: true,
            showCaption: true,
            minFileCount: 1
        });
        $("#imageBranchOffice").fileinput({
            theme: 'fa',
            allowedFileExtensions: ["jpg", "jpeg", "png", "gif", "svg"],
            previewSettings: { image: { width: "100%", height: "auto" } },
            showUpload: false,
            language: 'es',
            maxFileSize: 1000,
            uploadAsync: true,
            showCaption: true,
            minFileCount: 1,
            maxFileCount: 1
        });
        $("#inputLogo").fileinput({
            allowedFileExtensions: ["png", "gif", "svg"],
            previewSettings: { image: { width: "100%", height: "auto" } },
            language: "es",
            maxFileSize: 1000,
            uploadAsync: true,
            showUpload: true,
            showCaption: false
        });
        $("#product-image").fileinput({
            theme: "fa",
            allowedFileExtensions: ["jpg", "jpeg", "png", "gif", "svg"],
            language: "es",
            dropZoneEnabled: false,
            uploadAsync: false,
            minFileCount: 1,
            maxFileCount: 10,
            maxFileSize: 1000
        });
        $("#inputBanner").fileinput({
            theme: 'fa',
            allowedFileExtensions: ["jpg", "jpeg", "png", "gif"],
            previewSettings: { image: { width: "100%", height: "auto" } },
            language: "es",
            maxFileSize: 1000,
            uploadAsync: false,
            showCaption: true,
            showUpload: false
        });
        if (typeof jQuery.fn.redactor === 'function') {
            this.editor();
        }
        this.filterTable();
        $('[data-toggle="tooltip"]').tooltip();
        $('FormBrand').on('submit', function () {
            App.Brand.Form(this);
        });
        $('FormProduct').on('submit', function () {
            App.Product.Form(this);
        });
        $('#FormImagesProduct').on('submit', App.Product.FormImage);
        $("[data-delete-image]").on('click', function () {
            App.GalleryImageTrash(this);
        });
        $('#formBanner').submit(this.General.Banner.upload);
        $('.delete-banner').click(this.General.Banner.delete);
        // Categories
        $('.addCategory').on('click', this.Category.Create);
        $('.editCategory').on('click', this.Category.Update);
        $('.removeCategory').on('click', this.Category.Delete);
        //Stocks
        $('.quantity_stock').on('change', function (event) {
            event.preventDefault();
            var tableStock = $('#tableStock');
            tableStock.addClass('table-loading');
            var quantity = event.target.value;
            var id = event.target.dataset.id;

            var url = '/stocks/update';
            var data = { id: id, quantity: quantity };

            fetch(url, {
                method: 'PUT', // or 'PUT'
                body: JSON.stringify(data), // data can be `string` or {object}!
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then(function (res) {
                return res.json();
            }).catch(function (error) {
                console.error('Error:', error);
                tableStock.removeClass('table-loading');
            }).then(function (response) {
                tableStock.removeClass('table-loading');
                bootbox.alert(response.message);
            });
        });
        $('.select-search').select2({
            language: "es",
            theme: "bootstrap"
        });
    },
    Brand: {
        Form: function Form(event, form) {
            event.preventDefault();
            App.loading();
            App.Post(form, function (data) {
                console.log(data);
                bootbox.alert(data.message, function () {
                    if (data.state) {
                        form.reset();
                        window.location = '/brands';
                    }
                });
            });
        }
    },
    Product: {
        Form: function Form() {
            event.preventDefault();
            App.loading();
            var form = this;
            App.Post(form, function (data) {
                bootbox.alert(data.message, function () {
                    if (data.state) {
                        form.reset();
                        window.location = '/products/admin';
                    }
                });
            });
        },
        FormImage: function FormImage() {
            event.preventDefault();
            var form = this;
            App.loading();
            var formData = new FormData(form);
            fetch(form.action, {
                method: form.method,
                body: formData
            }).then(function (response) {
                return response.json();
            }).catch(function (error) {
                return console.error('Error:', error);
            }).then(function (response) {
                return App.Render('product-image.hbs', function (template) {
                    var templateRender = template(response.images);
                    $('#ProductImages').append(templateRender);
                    $("[data-delete-image]").on('click', function () {
                        App.GalleryImageTrash(this);
                    });
                    form.reset();
                });
            });
            App.loadingHide();
        }
    },
    Category: {
        Create: function Create(event) {
            event.preventDefault();
            var id = $(this).data('id');
            bootbox.prompt({
                title: "Ingrese el nombre de la nueva categoria.",
                buttons: {
                    confirm: {
                        label: 'Guardar',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancelar',
                        className: 'btn-default'
                    }
                },
                callback: function callback(name) {
                    if (id && name) {
                        $.post("/categories", { father_id: id, name: name }, function (data) {
                            var item = "<li class=\"list-group-item\">" + data.category.name + " <button type=\"button\" data-id=\"" + data.category.hashid + "\" data-name=\"" + data.category.name + "\" class=\"editCategory btn btn-default btn-xs\"> <i class=\"fa fa-edit\"></i></button> <button type=\"button\" data-id=\"" + data.category.hashid + "\" class=\"addCategory btn btn-default btn-xs\"><i class=\"fa fa-plus\"></i></button> <button type=\"button\" data-id=\"" + data.category.hashid + "\" class=\"removeCategory btn btn-default btn-xs\"><i class=\"fa fa-trash\"></i></button></li>";
                            $("#" + id).append(item);
                            console.log(data);
                        });
                    }
                }
            });
        },
        Update: function Update(event) {
            event.preventDefault();
            var item = $(this);
            var id = item.data('id');
            var name = item.data('name');
            bootbox.prompt({
                title: "Ingrese el nombre de la nueva categoria.",
                value: name,
                buttons: {
                    confirm: {
                        label: 'Guardar',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'Cancelar',
                        className: 'btn-default'
                    }
                },
                callback: function callback(result) {
                    if (result) {
                        var dataObject = { 'id': id, 'name': result };
                        $.ajax({
                            url: '/categories/',
                            type: 'PUT',
                            data: JSON.stringify(dataObject),
                            success: function success(data) {
                                bootbox.alert(data.message, function () {
                                    if (data.state) {
                                        $("#" + id + " > .item > span").text(result);
                                        $("#" + id + " > .item > .btn-group > .editCategory").data('name', result);
                                    }
                                });
                            }
                        });
                    }
                }
            });
        }
    },
    Post: function Post(form, callback) {
        var xhr = new XMLHttpRequest();
        xhr.open(form.method, form.action, true);
        xhr.onload = function (e) {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                    var res = xhr.responseText;
                    callback(JSON.parse(res));
                } else {
                    console.error(xhr.statusText);
                }
            }
        };
        xhr.onerror = function (e) {
            console.error(xhr.statusText);
        };
        xhr.send(new FormData(form));
    },
    getJSON: function getJSON(url, callback) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.onload = function (e) {
            if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                    var res = xhr.responseText;
                    callback(JSON.parse(res));
                } else {
                    console.error(xhr.statusText);
                }
            }
        };
        xhr.onerror = function (e) {
            console.error(xhr.statusText);
        };
        xhr.send(null);
    },
    loading: function loading() {
        document.getElementById('loading').style.display = 'block';
    },
    loadingHide: function loadingHide() {
        document.getElementById('loading').style.display = 'none';
    },
    formPost: function formPost(evt, form) {
        evt.preventDefault();
        $('#loading').show();
        var url = form.action;
        var postUrl = form.dataset.posturl;
        var dataSerialize = $(form).serialize();

        if (typeof postUrl === 'undefined') {
            postUrl = window.location.pathname;
        }
        $.post(url, dataSerialize, function (data) {
            console.log(data);
            $("#loading").hide();
            bootbox.alert(data.message, function () {
                if (data.state) {
                    App.ir(postUrl);
                }
            });
        });
    },
    formDataPost: function formDataPost(form) {
        console.log(form);
        var url = form.action;
        //var postUrl = form.dataset.posturl?:null;
        var data = new FormData(form);
        //if(typeof postUrl === 'undefined'){
        var postUrl = window.location.pathname;
        //}
        $.ajax({
            url: url,
            data: data,
            cache: false,
            contentType: false,
            processData: false,
            type: 'POST',
            success: function success(data) {
                console.log(data);
                App.loadingHide();
                bootbox.alert(data.message, function () {
                    if (data.state) {
                        App.ir(postUrl);
                    }
                });
            }
        });
    },
    GalleryImageTrash: function GalleryImageTrash(item) {
        bootbox.confirm({
            message: "Esta seguro(a) de eliminar esta imagen",
            callback: function callback(resp) {
                if (resp) {
                    App.loading();
                    var id = item.dataset.id;
                    var image = item.parentNode.parentNode.parentNode.parentNode;
                    $.getJSON('/products/delete-image/' + id, function (result) {
                        console.log(result);
                        App.loadingHide();
                        bootbox.alert(result.message);
                        if (result.state) {
                            image.remove();
                        }
                    });
                }
                App.loadingHide();
            }
        });
    },
    ir: function ir(url) {
        window.location = url;
    },
    template: function template(path, target, jsonData) {
        var source;
        var template;
        $.ajax({
            url: path,
            cache: false,
            success: function success(data) {
                source = data;
                template = Handlebars.compile(source);
                $(target).html(template(jsonData));
            }
        });
    },
    editor: function editor() {
        $('.editor').redactor({
            imageUpload: '/upload/image',
            fileUpload: '/upload/document',
            imageManagerJson: '/upload/read',
            replaceDivs: false,
            buttonSource: true,
            lang: 'es',
            plugins: ['underline', 'video', 'fontcolor', 'imagemanager', 'table', 'fontsize', 'fullscreen'],
            formatting: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5'],
            formattingAdd: {
                "accordion-header": {
                    title: 'Titulo Accordion',
                    args: ['h3', 'class', 'accordion-titulo', 'toggle']
                }
            }
        });
    },
    filterTable: function filterTable() {
        $('.table-filter').DataTable({
            "language": {
                "lengthMenu": "Mostrar _MENU_ registros por p√°gina",
                "zeroRecords": "No existen registros",
                "info": "Mostrando la p√°gina _PAGE_ de _PAGES_",
                "infoEmpty": "No hay registros disponibles",
                "search": "Buscar:",
                "infoFiltered": "(con filtro de _MAX_ registros en total)",
                "paginate": {
                    "first": "Primero",
                    "last": "√öltimo",
                    "next": "Siguiente",
                    "previous": "Anterior"
                }
            }
        });
    },
    General: {
        Banner: {
            upload: function upload() {
                event.preventDefault();
                App.loading();
                var form = this;
                var xhr = new XMLHttpRequest();
                xhr.onload = function () {
                    if (xhr.status >= 200 && xhr.status < 400) {
                        var data = JSON.parse(xhr.response);
                        App.Render('Banners.hbs', function (template) {
                            document.getElementById('sliders').innerHTML = template(data.banners);
                            var deleteBanner = document.querySelectorAll('.delete-banner');
                            for (var bnr = 0; bnr < deleteBanner.length; bnr++) {
                                deleteBanner[bnr].addEventListener('click', App.General.Banner.delete, false);
                            }
                        });
                        form.reset();
                        App.loadingHide();
                        bootbox.alert(data.message);
                    } else {
                        console.error("Error de request");
                    }
                };
                xhr.open(form.method, form.action, true);
                xhr.send(new FormData(form));
                return false;
            },
            delete: function _delete() {
                event.preventDefault();
                var slide = this;
                var id = slide.dataset.id;
                bootbox.confirm({
                    size: 'small',
                    message: "Esta seguro(a) de eliminar este banner",
                    callback: function callback(resp) {
                        App.loading();
                        if (resp) {
                            App.getJSON("/general/delete-banner/" + id, function (result) {
                                if (result.state) {
                                    var slider = slide.parentNode.parentNode.parentNode.parentNode.parentNode;
                                    slider.parentNode.removeChild(slider);
                                }
                                App.loadingHide();
                                bootbox.alert(result.message);
                            });
                        }
                    }
                });
            }
        }
    },
    Render: function Render(tpl, callback) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', "/App/Resource/Views/templates/" + tpl, true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                var raw = xhr.responseText;
                var compiled = Handlebars.compile(raw);
                callback(compiled);
            }
        };
        xhr.send();
    }

};
(function ($) {
    $.fn.replaceClass = function (pFromClass, pToClass) {
        return this.removeClass(pFromClass).addClass(pToClass);
    };
})(jQuery);
window.onload = App.initialize();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
